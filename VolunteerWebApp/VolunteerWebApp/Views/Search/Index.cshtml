@model VolunteerWebApp.Models.SearchViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Index</h2>

<style>
     /* Always set the map height explicitly to define the size of the div
    * element that contains the map. */
     #map {
         height: 200px;
     }
</style>

<div id="map"></div>

<script>
    var map;
    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var labelIndex = 0;
    var infoWindow = null;


    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: @Model.userLocation[0] , lng: @Model.userLocation[1] },
            zoom: 8
        });

      

        @foreach (var item in Model.cleanOpps)
        {
           @:var contentString = "<h2 id='firstHeading' class='firstHeading'><b>" + '@item.Title' + "</b></h2><br>"+'@item.AboutShort'+"<br>"+'@Html.ActionLink("MoreInfo","FullView","Organization", new {id=item.ID},  null)';
            @:addPin(@item.GeoLocation[0], @item.GeoLocation[1], '@item.Title', contentString )
                                }
        infowindow = new google.maps.InfoWindow({
            content: "loading..."
        });
    }


    function addPin(latitude, longitude, Title, Info) {
        var marker = new google.maps.Marker({
            position: { lat: latitude, lng: longitude },
            label: labels[labelIndex++ % labels.length],
            map: map,
            title : Title,
            html : Info
        });

        var content = "loading content";

        google.maps.event.addListener(marker, "click", function () {
            infowindow.setContent(this.html);
            infowindow.open(map, this);
        });
    }


</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyABln82MFoySBkjQPoJjeVYgeoK_R_RKPE&callback=initMap"
        >
</script>
