@model VolunteerWebApp.Models.SearchViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Index</h2>

<style>
     /* Always set the map height explicitly to define the size of the div
    * element that contains the map. */
     #map {
         height: 200px;
     }
</style>

@using (Html.BeginForm("FilterSearch", "Search", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Enter Hotel Details</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.KeywordFilter, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.KeywordFilter , new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CategoryFilter, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CategoryFilter, new SelectList(Model.CategoryList, "ID", "Category"), "", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OrganizationFilter, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.OrganizationFilter, new SelectList(Model.OrgNames), "", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Filter Search!" />
        </div>
    </div>
}


<div id="map"></div>

<script>
    var map;
    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var labelIndex = 0;
    var infoWindow = null;


    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 43.0389 , lng: -87.9065 },
            zoom: 8
        });



        @foreach (var item in Model.cleanOpps)
        {
           @:var contentString = "<h2 id='firstHeading' class='firstHeading'><b>" + '@item.Title' + "</b></h2><br>"+'@item.AboutShort'+"<br>"+'@Html.ActionLink("MoreInfo","FullView","Organization", new {id=item.ID},  null)';
            @:addPin(@item.GeoLocation[0], @item.GeoLocation[1], '@item.Title', contentString )
                                }
        infowindow = new google.maps.InfoWindow({
            content: "loading..."
        });
    }


    function addPin(latitude, longitude, Title, Info) {
        var marker = new google.maps.Marker({
            position: { lat: latitude, lng: longitude },
            label: labels[labelIndex++ % labels.length],
            map: map,
            title : Title,
            html : Info
        });

        var content = "loading content";

        google.maps.event.addListener(marker, "click", function () {
            infowindow.setContent(this.html);
            infowindow.open(map, this);
        });
    }


</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyABln82MFoySBkjQPoJjeVYgeoK_R_RKPE&callback=initMap"
        >
</script>
